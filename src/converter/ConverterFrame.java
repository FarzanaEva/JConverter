/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package converter;

import javax.swing.JOptionPane;

/**
 *
 * @author FarZana
 */
public class ConverterFrame extends javax.swing.JFrame {

    /**
     * Creates new form ConverterFrame
     */
    public ConverterFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlblTitle = new javax.swing.JLabel();
        jlblOption = new javax.swing.JLabel();
        jcmbOption = new javax.swing.JComboBox<>();
        jlblSelected = new javax.swing.JLabel();
        jlblFrom = new javax.swing.JLabel();
        jcmbConvertList = new javax.swing.JComboBox<>();
        jlblTo = new javax.swing.JLabel();
        jcmbToConvert = new javax.swing.JComboBox<>();
        jbtnConvert = new javax.swing.JButton();
        jlblResult = new javax.swing.JLabel();
        jbtnReset = new javax.swing.JButton();
        jbtnExit = new javax.swing.JButton();
        jtxtInsertValue = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlblTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jlblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblTitle.setText("JConverter");
        jlblTitle.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 102), 5, true));

        jlblOption.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jlblOption.setForeground(new java.awt.Color(153, 0, 0));
        jlblOption.setText("Select your Conversion option : ");

        jcmbOption.setBackground(new java.awt.Color(0, 204, 51));
        jcmbOption.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jcmbOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one ...", "Height", "Weight", "Currency" }));
        jcmbOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbOptionActionPerformed(evt);
            }
        });

        jlblSelected.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jlblSelected.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 4));
        jlblSelected.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jlblFrom.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jlblFrom.setText("  From");
        jlblFrom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 102, 0), 3));
        jlblFrom.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jcmbConvertList.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jcmbConvertList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jlblTo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jlblTo.setText("   TO");
        jlblTo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 255), 3));
        jlblTo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jcmbToConvert.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jcmbToConvert.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtnConvert.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jbtnConvert.setForeground(new java.awt.Color(204, 51, 0));
        jbtnConvert.setText("Convert");
        jbtnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConvertActionPerformed(evt);
            }
        });

        jlblResult.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jlblResult.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 102), 3));

        jbtnReset.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jbtnReset.setText("Reset");
        jbtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnResetActionPerformed(evt);
            }
        });

        jbtnExit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jbtnExit.setText("Exit");
        jbtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExitActionPerformed(evt);
            }
        });

        jtxtInsertValue.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Enter Value to Convert");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jlblOption)
                        .addGap(88, 88, 88)
                        .addComponent(jcmbOption, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jlblFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jcmbConvertList, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(124, 124, 124)
                        .addComponent(jlblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jcmbToConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel1)
                        .addGap(102, 102, 102)
                        .addComponent(jtxtInsertValue, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbtnConvert)
                        .addGap(369, 369, 369))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jlblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(335, 335, 335))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jlblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(275, 275, 275))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbtnReset)
                        .addGap(194, 194, 194)
                        .addComponent(jbtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(237, 237, 237))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jlblSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(333, 333, 333))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jlblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblOption, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmbOption, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jlblSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmbConvertList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblTo)
                    .addComponent(jcmbToConvert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxtInsertValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addComponent(jbtnConvert)
                .addGap(18, 18, 18)
                .addComponent(jlblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnExit)
                    .addComponent(jbtnReset))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcmbOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbOptionActionPerformed
        // TODO add your handling code here:
        if (jcmbOption.getSelectedItem().equals("Height")) {
            jlblSelected.setText("      Height");
            jcmbConvertList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Metre", "Centimeter", "Inch", "Foot"}));
            jcmbToConvert.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Metre", "Centimeter", "Inch", "Foot"}));
        } else if (jcmbOption.getSelectedItem().equals("Weight")) {
            jlblSelected.setText("      Weight");
            jcmbConvertList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Kg", "Gram", "Pound", "Ounce"}));
            jcmbToConvert.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Kg", "Gram", "Pound", "Ounce"}));
        } else if (jcmbOption.getSelectedItem().equals("Currency")) {
            jlblSelected.setText("      Currency");
            jcmbConvertList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"BDT", "Dollar", "Yen", "Rupee"}));
            jcmbToConvert.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"BDT", "Dollar", "Yen", "Rupee"}));
        }
    }//GEN-LAST:event_jcmbOptionActionPerformed

    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jbtnExitActionPerformed

    private void jbtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnResetActionPerformed
        // TODO add your handling code here:
        jlblSelected.setText(null);
        jlblResult.setText(null);
        jtxtInsertValue.setText(null);
        jcmbOption.setSelectedIndex(0);
        jcmbConvertList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        jcmbToConvert.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        jcmbConvertList.setSelectedIndex(0);
        jcmbToConvert.setSelectedIndex(0);

    }//GEN-LAST:event_jbtnResetActionPerformed

    private void jbtnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConvertActionPerformed
        // TODO add your handling code here:
        try {
            double value = Double.parseDouble(jtxtInsertValue.getText());

            if (jcmbConvertList.getSelectedItem().equals("Metre") || jcmbConvertList.getSelectedItem().equals("Centimeter")
                    || jcmbConvertList.getSelectedItem().equals("Inch") || jcmbConvertList.getSelectedItem().equals("Foot")) {
                height(value);
            } else if (jcmbConvertList.getSelectedItem().equals("Kg") || jcmbConvertList.getSelectedItem().equals("Gram")
                    || jcmbConvertList.getSelectedItem().equals("Pound") || jcmbConvertList.getSelectedItem().equals("Ounce")) {
                weight(value);
            } else if (jcmbConvertList.getSelectedItem().equals("BDT") || jcmbConvertList.getSelectedItem().equals("Dollar")
                    || jcmbConvertList.getSelectedItem().equals("Yen") || jcmbConvertList.getSelectedItem().equals("Rupee")) {
                currency(value);
            }
    }//GEN-LAST:event_jbtnConvertActionPerformed
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid Format!!.","Error", JOptionPane.ERROR_MESSAGE);
        }
  }
    private void height(double value) {
        if (jcmbConvertList.getSelectedItem().equals("Metre")) {
            if (jcmbToConvert.getSelectedItem().equals("Metre")) {
                String convert = String.format("%.2f m", value);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Centimeter")) {
                String convert = String.format("%.2f cm", value * 100);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Inch")) {
                String convert = String.format("%.2f in", value * 39.3701);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Foot")) {
                String convert = String.format("%.2f foot", value * 3.281);
                jlblResult.setText(convert);
            }
        }
        if (jcmbConvertList.getSelectedItem().equals("Centimeter")) {
            if (jcmbToConvert.getSelectedItem().equals("Metre")) {
                String convert = String.format("%.2f m", value / 100);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Centimeter")) {
                String convert = String.format("%.2f cm", value);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Inch")) {
                String convert = String.format("%.2f in", value / 2.54);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Foot")) {
                String convert = String.format("%.2f foot", value / 30.48);
                jlblResult.setText(convert);
            }
        }
        if (jcmbConvertList.getSelectedItem().equals("Inch")) {
            if (jcmbToConvert.getSelectedItem().equals("Metre")) {
                String convert = String.format("%.2f m", value / 39.37);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Centimeter")) {
                String convert = String.format("%.2f cm", value * 2.54);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Inch")) {
                String convert = String.format("%.2f in", value);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Foot")) {
                String convert = String.format("%.2f foot", value / 12);
                jlblResult.setText(convert);
            }
        }
        if (jcmbConvertList.getSelectedItem().equals("Foot")) {
            if (jcmbToConvert.getSelectedItem().equals("Metre")) {
                String convert = String.format("%.2f m", value / 3.281);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Centimeter")) {
                String convert = String.format("%.2f cm", value * 30.48);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Inch")) {
                String convert = String.format("%.2f in", value * 12);
                jlblResult.setText(convert);
            } else if (jcmbToConvert.getSelectedItem().equals("Foot")) {
                String convert = String.format("%.2f foot", value);
                jlblResult.setText(convert);
            }
        }
    }

    private void weight(double value) {
        if (jcmbConvertList.getSelectedItem().equals("Kg")) {
            if (jcmbToConvert.getSelectedItem().equals("Kg")) {
                String con = String.format("%.2f kg", value);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Gram")) {
                String con = String.format("%.2f g", value * 100);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Pound")) {
                String con = String.format("%.2f pound", value * 2.205);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Ounce")) {
                String con = String.format("%.2f ounce", value * 35.274);
                jlblResult.setText(con);
            }
        } else if (jcmbConvertList.getSelectedItem().equals("Gram")) {
            if (jcmbToConvert.getSelectedItem().equals("Kg")) {
                String con = String.format("%.2f kg", value / 1000);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Gram")) {
                String con = String.format("%.2f g", value);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Pound")) {
                String con = String.format("%.2f pound", value / 453.592);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Ounce")) {
                String con = String.format("%.2f ounce", value / 28.35);
                jlblResult.setText(con);
            }
        } else if (jcmbConvertList.getSelectedItem().equals("Pound")) {
            if (jcmbToConvert.getSelectedItem().equals("Kg")) {
                String con = String.format("%.2f kg", value / 2.205);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Gram")) {
                String con = String.format("%.2f g", value * 453.592);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Pound")) {
                String con = String.format("%.2f pound", value);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Ounce")) {
                String con = String.format("%.2f ounce", value * 16);
                jlblResult.setText(con);
            }
        } else if (jcmbConvertList.getSelectedItem().equals("Ounce")) {
            if (jcmbToConvert.getSelectedItem().equals("Kg")) {
                String con = String.format("%.2f kg", value / 35.274);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Gram")) {
                String con = String.format("%.2f g", value * 28.35);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Pound")) {
                String con = String.format("%.2f pound", value / 16);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Ounce")) {
                String con = String.format("%.2f ounce", value);
                jlblResult.setText(con);
            }
        }

    }

    private void currency(double value) {
        if (jcmbConvertList.getSelectedItem().equals("BDT")) {
            if (jcmbToConvert.getSelectedItem().equals("BDT")) {
                String con = String.format("%.2f tk", value);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Dollar")) {
                String con = String.format("%.2f $", value * 0.012);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Yen")) {
                String con = String.format("%.2f yen", value * 1.35);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Rupee")) {
                String con = String.format("%.2f rupee", value * 0.84);
                jlblResult.setText(con);
            }
        } else if (jcmbConvertList.getSelectedItem().equals("Dollar")) {
            if (jcmbToConvert.getSelectedItem().equals("BDT")) {
                String con = String.format("%.2f tk", value * 83.95);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Dollar")) {
                String con = String.format("%.2f $", value);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Yen")) {
                String con = String.format("%.2f yen", value * 113.02);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Rupee")) {
                String con = String.format("%.2f rupee", value * 70.5);
                jlblResult.setText(con);
            }
        } else if (jcmbConvertList.getSelectedItem().equals("Yen")) {
            if (jcmbToConvert.getSelectedItem().equals("BDT")) {
                String con = String.format("%.2f tk", value * 0.74);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Dollar")) {
                String con = String.format("%.2f $", value / 113.02);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Yen")) {
                String con = String.format("%.2f yen", value);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Rupee")) {
                String con = String.format("%.2f rupee", value * 0.62);
                jlblResult.setText(con);
            }
        } else if (jcmbConvertList.getSelectedItem().equals("Rupee")) {
            if (jcmbToConvert.getSelectedItem().equals("BDT")) {
                String con = String.format("%.2f tk", value * 1.19);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Dollar")) {
                String con = String.format("%.2f $", value / 70.5);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Yen")) {
                String con = String.format("%.2f yen", value * 1.6);
                jlblResult.setText(con);
            } else if (jcmbToConvert.getSelectedItem().equals("Rupee")) {
                String con = String.format("%.2f rupee", value);
                jlblResult.setText(con);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConverterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConverterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConverterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConverterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConverterFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbtnConvert;
    private javax.swing.JButton jbtnExit;
    private javax.swing.JButton jbtnReset;
    private javax.swing.JComboBox<String> jcmbConvertList;
    private javax.swing.JComboBox<String> jcmbOption;
    private javax.swing.JComboBox<String> jcmbToConvert;
    private javax.swing.JLabel jlblFrom;
    private javax.swing.JLabel jlblOption;
    private javax.swing.JLabel jlblResult;
    private javax.swing.JLabel jlblSelected;
    private javax.swing.JLabel jlblTitle;
    private javax.swing.JLabel jlblTo;
    private javax.swing.JTextField jtxtInsertValue;
    // End of variables declaration//GEN-END:variables
}
